# input_size table_size m m1 m2 A c1 c2 chain_m division input_max
# This is a comment
1000 1250 1250 1250 1250 0.618 1 2 625 div 1000000
10000 12500 12500 12500 12500 0.618 1 2 6250 div 1000000
100000 125000 125000 125000 125000 0.618 1 2 62500 div 1000000
1000000 1250000 1250000 1250000 1250000 0.618 1 2 625000 div 10000000
10000000 12500000 12500000 12500000 12500000 0.618 1 2 6250000 div 100000000
1000 1250 1250 1250 1250 0.618 1 2 625 mult 1000000
10000 12500 12500 12500 12500 0.618 1 2 6250 mult 1000000
100000 125000 125000 125000 125000 0.618 1 2 62500 mult 1000000
1000000 1250000 1250000 1250000 1250000 0.618 1 2 625000 mult 10000000
10000000 12500000 12500000 12500000 12500000 0.618 1 2 625000 mult 100000000
1000 1250 1223 1217 1123 0.618 1 2 625 div 1000000
10000 12500 12251 12899 12373 0.618 1 2 6250 div 1000000
100000 125000 122497 121621 121379 0.618 1 2 62500 div 1000000
1000000 1256000 1252259 1252523 1251157 0.618 1 2 625000 div 10000000
10000000 12500000 12502481 12501991 12503371 0.618 1 2 6250000 div 100000000
1000 1250 1250 1250 1250 0.618 3 7 625 div 1000000
10000 12500 12500 12500 12500 0.618 3 7 6250 div 1000000
100000 125000 125000 125000 125000 0.618 3 7 62500 div 1000000
1000000 1250000 1250000 1250000 1250000 0.618 3 7 625000 div 10000000
10000000 12500000 12500000 12500000 12500000 0.618 3 7 6250000 div 100000000
1000 1250 1250 1250 1250 0.618 3 7 625 mult 1000000
10000 12500 12500 12500 12500 0.618 3 7 6250 mult 1000000
100000 125000 125000 125000 125000 0.618 3 7 62500 mult 1000000
1000000 1250000 1250000 1250000 1250000 0.618 3 7 625000 mult 10000000
10000000 12500000 12500000 12500000 12500000 0.618 3 7 625000 mult 100000000
# multiplication tests
1000 1250 1223 1217 1123 0.618 1 2 625 mult 1000000
10000 12500 12251 12899 12373 0.618 1 2 6250 mult 1000000
100000 125000 122497 121621 121379 0.618 1 2 62500 mult 1000000
1000000 1256000 1252259 1252523 1251157 0.618 1 2 625000 mult 10000000
10000000 12500000 12502481 12501991 12503371 0.618 1 2 6250000 mult 100000000
# These tests vary the A constant (multiplication only)
# These had the most impact on chaining
# results show that A=0.618 has the least collisions on chaining
# These tests vary the m1 and m2 values
1000 1250 1250 1213 1217 0.618 1 2 625 mult 1000000
1000 1250 1250 1289 1291 0.618 1 2 625 mult 1000000
1000 1250 1250 1249 1259 0.618 1 2 625 mult 1000000
1000 1250 1250 1231 1237 0.618 1 2 625 mult 1000000
1000 1250 1250 1217 1213 0.618 1 2 625 mult 1000000
1000 1250 1250 1291 1289 0.618 1 2 625 mult 1000000
1000 1250 1250 1259 1249 0.618 1 2 625 mult 1000000
1000 1250 1250 1237 1231 0.618 1 2 625 mult 1000000
# These tests vary the c1 and c2 values
100000 125000 125000 1250 1250 0.618 4 5 625 mult 1000000
100000 125000 125000 1250 1250 0.618 2 8 625 mult 1000000
100000 125000 125000 1250 1250 0.618 1 2 625 mult 1000000
100000 125000 125000 1250 1250 0.618 3 7 625 mult 1000000
100000 125000 125000 1250 1250 0.618 5 4 625 mult 1000000
100000 125000 125000 1250 1250 0.618 8 2 625 mult 1000000
100000 125000 125000 1250 1250 0.618 2 1 625 mult 1000000
100000 125000 125000 1250 1250 0.618 7 3 625 mult 1000000
